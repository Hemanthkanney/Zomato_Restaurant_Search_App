<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Restaurant Details</title>
  <link rel="stylesheet" href="/styles.css">
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 20px;
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto;
    }

    .details-wrapper {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-start;
      width: 100%;
      margin-top: 20px;
    }

    .image-container {
      flex: 2;
      margin-right: 20px;
      width: auto;
    }

    .details-container {
      flex: 1;
      margin-left: 20px;
    }

    .restaurant-img {
      width: 100%;
      height: auto;
    }

    .rating-bar-container {
      margin-top: 10px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    .rating-bar-and-cost {
      display: flex;
      align-items: center;
    }

    .rating-bar {
      width: 200px;
      height: 20px;
      background-color: #e0e0e0; /* Light grey background */
      border-radius: 5px;
      position: relative;
      margin-right: 20px;
    }

    .rating-bar-fill {
      height: 100%;
      border-radius: 5px;
      position: absolute;
      top: 0;
      left: 0;
      transition: width 0.3s ease;
    }

    .rating-text {
      font-size: 1.25rem;
      color: #333;
    }

    .star-rating {
      font-size: 1rem;
      color: #f39c12;
    }

    .details-section {
      margin-bottom: 20px;
    }

    .details-section p {
      font-size: 1.05rem; /* Adjust font size for paragraphs in details section */
    }

    .cost-container {
      display: flex;
      align-items: center;
      font-size: 1.25rem;
      color: #333;
      margin-left: 20px; /* Increased margin to move text right */
    }

    .currency {
      margin-left: 5px;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 id="restaurant-name">Restaurant Name</h1>
    <div class="details-wrapper">
      <div class="image-container">
        <img id="restaurant-img" class="restaurant-img" src="default-image.jpg" alt="Restaurant Image">
        <div class="rating-bar-container">
          <div id="star-rating" class="star-rating"></div>
          <p id="rating-text" class="rating-text"></p>
          <div class="rating-bar-and-cost">
            <div class="rating-bar">
              <div id="rating-bar-fill" class="rating-bar-fill"></div>
            </div>
            <div class="cost-container">
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <!-- Add tab space -->
              <span id="average-cost"></span>
             
              <span id="currency" class="currency"></span>
            </div>
          </div>
        </div>
      </div>
      <div class="details-container" id="restaurant-details">
        <!-- Restaurant details will be inserted here -->
      </div>
    </div>
  </div>

  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const restaurantId = urlParams.get('id');

    if (restaurantId) {
      fetch(`http://localhost:3000/api/restaurant/${restaurantId}`)
        .then(response => response.json())
        .then(restaurant => {
          const detailsDiv = document.getElementById('restaurant-details');
          const nameHeading = document.getElementById('restaurant-name');
          const img = document.getElementById('restaurant-img');
          const ratingBarFill = document.getElementById('rating-bar-fill');
          const ratingText = document.getElementById('rating-text');
          const starRating = document.getElementById('star-rating');
          const averageCost = document.getElementById('average-cost');
          const currency = document.getElementById('currency');

          if (restaurant.error) {
            detailsDiv.innerHTML = `<p class="text-danger">${restaurant.error}</p>`;
          } else {
            nameHeading.textContent = restaurant.name;
            img.src = restaurant.featured_image || 'default-image.jpg';

            // Calculate the width of the rating bar based on the rating
            const rating = parseFloat(restaurant.aggregate_rating);
            const ratingPercentage = (rating / 5) * 100;
            ratingBarFill.style.width = `${ratingPercentage}%`;
            ratingBarFill.style.backgroundColor = restaurant.rating_color || '#e0e0e0'; // Use color from DB or default to light grey
            ratingText.textContent = `Rating: ${restaurant.aggregate_rating} (${restaurant.votes} votes)`;

            // Generate star rating
            const starRatingHtml = getStarRatingHtml(rating);
            starRating.innerHTML = starRatingHtml;

            // Display average cost and currency
            averageCost.textContent = `${restaurant.average_cost_for_two}`;
            currency.textContent = restaurant.currency;

            detailsDiv.innerHTML = `
              <div class="details-section">
                <p><strong>City:</strong> ${restaurant.city}</p>
                <p><strong>Address:</strong> ${restaurant.address}</p>
                <p><strong>Locality:</strong> ${restaurant.locality}</p>
                <p><strong>Cuisines:</strong> ${restaurant.cuisines}</p>
                <p><strong>Has Table Booking:</strong> ${restaurant.has_table_booking ? 'Yes' : 'No'}</p>
                <p><strong>Has Online Delivery:</strong> ${restaurant.has_online_delivery ? 'Yes' : 'No'}</p>
                <p><strong>Is Delivering Now:</strong> ${restaurant.is_delivering_now ? 'Yes' : 'No'}</p>
                <p><strong>Switch to Order Menu:</strong> ${restaurant.switch_to_order_menu ? 'Yes' : 'No'}</p>
                <p><strong>Price Range:</strong> ${restaurant.price_range}</p>
                <p><strong>Votes:</strong> ${restaurant.votes}</p>
              </div>
            `;
          }
        })
        .catch(error => console.error('Error fetching restaurant details:', error));
    } else {
      document.getElementById('restaurant-details').innerHTML = '<p class="text-danger">No restaurant ID provided in the URL.</p>';
    }

    function getStarRatingHtml(rating) {
      let stars = '';
      const fullStars = Math.floor(rating);
      const halfStar = (rating % 1) >= 0.5;
      const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

      for (let i = 0; i < fullStars; i++) {
        stars += '⭐'; // Full star
      }
      if (halfStar) {
        stars += '⭐'; // Half star
      }
      for (let i = 0; i < emptyStars; i++) {
        stars += '☆'; // Empty star  
      }
      return stars;
    }
  </script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
